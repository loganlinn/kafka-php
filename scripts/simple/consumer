#!/usr/bin/env php
<?php

/**
 *. Consumer
 *.
 *. Simple consumer script that will connect directly to Kafka broker,
 *. and retrieve the messages since a given offset.
 *.
 *. Usage: ./scripts/simple/consumer -b {broker} -t {topic} [-o {offset}]
 *.
 *.     -b  Broker, the Kafka broker where we want to connect
 *.     -t  Topic, sets the topic where you want to produce
 *.     -o  Offset (optional), sets the starting point where
 *.         we want to consume
 *.     -h  Help, will display the help for the script
 *
 * @author      Michal Haris <michal.harish@gmail.com>
 * @date        2013-01-24
 */

// check script parametrs
$options = getopt("hb:t:o:");

// require kafka-php library
require __DIR__ . "/../../src/Kafka/Kafka.php";
require __DIR__ . "/../help.php";

if (!isset($options["b"])
    || !isset($options["t"])) {
    help();
}

$partition = 0;
$offset    = NULL;
$topic     = $options["t"];

$brokers  = explode(",", $options["b"]);
$timeout  = 6; //seconds
$protocol = 0.8;

if (isset($options["o"])) {
    $offset = new \Kafka\Offset($options["o"]);
}

// connection
$kafka = new \Kafka\Kafka($brokers, $timeout, $protocol);

// consumer
$consumer = $kafka->createConsumer();

// offsets request
while (true) {
	try {
        $offsets = $consumer->offsets(
            $topic,
            $partition,
            \Kafka\Kafka::OFFSETS_EARLIEST
        );
		break;
	} catch (\Kafka\Exception $e) {
        echo "\nFailed to read offsets from partition $topic:$partition "
            . $e->getMessage();

		if (--$partition < 0) break;
	}
}

if ($offset === NULL || $offset < $offsets[0]) {
    $offset = $offsets[0];
    echo "Offset request earliest: '$topic:$partition' = $offset\n";
} else {
    echo "Reading from offset: '$topic:$partition' = $offset\n";
}

// initialize watermark offset
$watermark = clone $offset;

// fetch request
$totalProcessed = 0;

echo "\nFetch request from watermark offset: $watermark\n";

while ($consumer->fetch($topic, 0, $watermark)) {
    try {
        while ($message = $consumer->nextMessage()) {

            try {

                $watermark = $consumer->getWatermark();
                $payload = $message->payload();
                echo "\n[offset:" . $message->offset() . " watermark: $watermark]" . $message->payload() ;
            } catch (Exception $e) {
                echo "\nError processing message at offset " . "$watermark: " . $e->getMessage();
                echo "\n";
            }
            $totalProcessed++;
        }
   } catch (Exception $e) {
       echo "\n\nError fetching message at offset $watermark: "
           . $e->getMessage();
       echo $e->getTraceAsString();
       break;
   }
}
echo "\nNo more messages. Total processed messages: $totalProcessed, "
    . "New watermark: " . $watermark . "\n\n";

// close the kafka consumer
$consumer->close();
